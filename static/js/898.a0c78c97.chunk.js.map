{"version":3,"file":"static/js/898.a0c78c97.chunk.js","mappings":"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","sources":["webpack://space-within-us/./src/components/ProjectCard/Table/table.module.scss?b91e","components/ProjectCard/Table/TableFragment.tsx","components/ProjectCard/Table/Table.tsx","webpack://space-within-us/./src/components/ProjectCard/ProjecCard.module.scss?6095","components/ProjectCard/ManagementList.tsx","components/ProjectCard/ProjectCard.tsx","pages/ProjectsPage.tsx","hooks/debounce.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"table\":\"table_table__zSRTc\",\"heading\":\"table_heading__gDCWN\",\"item\":\"table_item__im2e7\"};","import React from 'react';\r\nimport {SupportingOrganization} from \"../../../models/ProjectModels\";\r\nimport styles from './table.module.scss'\r\n\r\nconst TableFragment = ({organ}: {organ: SupportingOrganization} ) => {\r\n    return (\r\n        <tr>\r\n            <td className={styles.item}>\r\n                {organ.organizationName} (\r\n                {organ.acronym})\r\n            </td>\r\n            <td className={styles.item}>Supporting Organization</td>\r\n            <td className={styles.item}>{organ.organizationTypePretty}</td>\r\n            <td className={styles.item}>\r\n                {organ.city},\r\n                 {organ.stateTerritory?.name}\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default TableFragment;","import React from 'react';\r\nimport TableFragment from \"./TableFragment\";\r\nimport {IProject} from \"../../../models/ProjectModels\";\r\nimport styles from './table.module.scss'\r\n\r\nconst Table = ({project}: {project: IProject}) => {\r\n    return (\r\n        <table className={styles.table}>\r\n            <thead>\r\n            <tr className={styles.heading}>\r\n                <td className={styles.item}>Organizations Performing Work</td>\r\n                <td className={styles.item}>Role</td>\r\n                <td className={styles.item}>Type</td>\r\n                <td className={styles.item}>Location</td>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <TableFragment\r\n                key={project.leadOrganization.organizationId}\r\n                organ={project.leadOrganization}\r\n            />\r\n            {project.supportingOrganizations.map((organ) => (\r\n                <TableFragment key={organ.organizationId} organ={organ} />\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Table;","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"ProjecCard_body__lwge4\",\"header\":\"ProjecCard_header__rEF5j\",\"heading\":\"ProjecCard_heading__-jN+Z\",\"management\":\"ProjecCard_management__Wxx3R\"};","import React from 'react';\r\nimport styles from \"./ProjecCard.module.scss\";\r\nimport {IProject} from \"../../models/ProjectModels\";\r\n\r\nconst ManagementList = ({project}: {project: IProject}) => {\r\n    return (\r\n        <div className={styles.management}>\r\n            <b className=\"text-2xl\">Project Management</b>\r\n            <ul>\r\n                <b>Program Director: </b>\r\n                {project.programDirectors.map((dir) => (\r\n                    <li key={dir.contactId}>\r\n                        <a href={\"mailto:\" + dir.primaryEmail}>{dir.fullName}</a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <ul>\r\n                <b>Program Manager:</b>\r\n                {project.programManagers.map((manager) => (\r\n                    <li key={manager.contactId}>\r\n                        <a href={\"mailto:\" + manager.primaryEmail}>{manager.fullName}</a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <ul>\r\n                <b>Program Manager:</b>\r\n                {project.projectManagers.map((manager) => (\r\n                    <li key={manager.contactId}>\r\n                        <a href={\"mailto:\" + manager.primaryEmail}>{manager.fullName}</a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagementList;","import React from \"react\";\nimport { IProject } from \"../../models/ProjectModels\";\nimport Table from \"./Table/Table\";\nimport styles from \"./ProjecCard.module.scss\";\nimport ManagementList from \"./ManagementList\";\n\nconst ProjectCard = ({ project }: { project: IProject }) => {\n  return (\n    <div className={styles.body}>\n      <div className={styles.header}>\n        {project.title} <br />\n        Status: <b>{project.statusDescription}</b>\n      </div>\n        <div className='text-center'>id: {project.projectId}</div>\n      <div className={styles.heading}>\n        <b className=\"text-2xl\">Project Introduction</b>\n        <br /> {project.description}\n      </div>\n      <div className={styles.heading}>\n        <b className=\"text-2xl\">Anticipated Benefits</b>\n        <br /> {project.description}\n      </div>\n\n      <div className=\"flex justify-center\">\n        <Table project={project} />\n      </div>\n      <ManagementList project={project} />\n      <div className=\"font-thin p-1 indent-8\">\n        <b className=\"text-2xl\">Project Duration:</b> <br />\n        <div>\n          <span>\n          <b>Start: </b>\n          {project.startDateString}\n        </span>\n        <span className=\"ml-3\">\n          <b>End: </b>\n          {project.endDateString}\n        </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCard;\n","import React, { useEffect, useState } from \"react\";\nimport {useLazyGetProjectQuery, useSearchProjectsQuery} from \"../store/nasa/nasa.api\";\nimport { useDebounce } from \"../hooks/debounce\";\nimport ProjectCard from \"../components/ProjectCard/ProjectCard\";\n\nconst ProjectsPage = () => {\n  const [search, setSearch] = useState(\"\");\n  const [dropdown, setDropdown] = useState(false);\n  const debounced = useDebounce(search);\n  const {\n    isLoading,\n    data: projects,\n  } = useSearchProjectsQuery(debounced, {\n    skip: debounced.length < 2,\n  });\n  const [fetchProject, {isLoading: isLoadProj,isError: isErrorProj, data: project}] = useLazyGetProjectQuery()\n\n  useEffect(() => {\n    setDropdown(debounced.length > 2);\n  }, [debounced, projects]);\n\n  const clickHandler = (projectId: number) => {\n    fetchProject(projectId);\n    setDropdown(false)\n  };\n\n  return (\n    <div className=\"grid justify-items-center p-2 m-10 border-2 rounded-md shadow-md\">\n      <div className=\"py-4 px-2\">\n        Добро пожаловать в TechPort — ресурс НАСА для сбора и обмена информацией\n        о развитии технологий, финансируемых НАСА. Techport позволяет публике\n        открыть для себя технологии, над которыми НАСА работает каждый день,\n        чтобы исследовать космос, понимать вселенную и улучшать аэронавтику.\n      </div>\n\n      <div className=\"relative w-[500px]\">\n        <input\n          type=\"text\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          className=\"border py-2 px-4 w-full h-[50px] mb-2\"\n          placeholder=\"Поиск по проектам техпорта\"\n        />\n        {dropdown && (\n          <ul className=\"list-none absolute top-[50px] left-0 right-0 max-h-[300px] overflow-y-scroll shadow-md bg-white\">\n            {isLoading && <p className=\"text-center\">Loading...</p>}\n            {projects?.map((item) => (\n              <li\n                key={item.projectId}\n                onClick={() => clickHandler(item.projectId)}\n                className=\"py-2 px-4 hover:bg-blue-800 hover:text-white transition-colors cursor-pointer\"\n              >\n                {item.title}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n      <div className='text-gray-500'>*могут открыться не все проекты. API Nasa с ошибками.</div>\n      <div className='py-4 px-2'>\n        {isLoadProj && <p className=\"text-2xl text-center\">Loading project...</p>}\n        {isErrorProj && <p className=\"text-2xl text-center text-red-600\">Some error...</p>}\n        {project && <ProjectCard project={project} />}\n\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectsPage;\n","import {useEffect, useState} from \"react\";\r\n\r\nexport const useDebounce = (value: string, delay = 300) => {\r\n    const [debounced, setDebounced] = useState(value)\r\n\r\n    useEffect(()=> {\r\n        const handler = setTimeout(()=> setDebounced(value), delay)\r\n        return ()=> clearTimeout(handler)\r\n    }, [value, delay])\r\n\r\n    return debounced\r\n}"],"names":["organ","className","styles","organizationName","acronym","organizationTypePretty","city","stateTerritory","name","project","leadOrganization","organizationId","supportingOrganizations","map","programDirectors","dir","href","primaryEmail","fullName","contactId","programManagers","manager","projectManagers","title","statusDescription","projectId","description","startDateString","endDateString","useState","search","setSearch","dropdown","setDropdown","debounced","value","delay","setDebounced","useEffect","handler","setTimeout","clearTimeout","useDebounce","useSearchProjectsQuery","skip","length","isLoading","projects","data","useLazyGetProjectQuery","fetchProject","isLoadProj","isErrorProj","isError","type","onChange","e","target","placeholder","item","onClick"],"sourceRoot":""}