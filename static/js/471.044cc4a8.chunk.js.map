{"version":3,"file":"static/js/471.044cc4a8.chunk.js","mappings":"sOAsEA,EA/DuC,SAAC,GAAqB,IAAnBA,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC9C,GACEC,EAAAA,EAAAA,MADF,eAAOC,EAAP,YAAqBC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,QAAeC,EAA/C,EAAyCC,KAEnCC,GAAWC,EAAAA,EAAAA,eACXC,GAASC,EAAAA,EAAAA,aAAYC,EAAAA,IAM3B,IAJAC,EAAAA,EAAAA,YAAU,WACRV,EAAWH,EACZ,GAAE,IAECI,EACF,OAAO,cAAGU,UAAU,uBAAb,wBAET,GAAIT,EACF,OAAO,sCAGTC,GAASE,GAASO,EAAAA,EAAAA,IAAST,IAC3B,IAAMU,EAAeN,EAAOO,MAAK,SAAAC,GAAG,OAAIA,EAAIlB,OAASA,CAAjB,IAEpC,OACE,iBAAKc,UAAU,gEAAf,WACE,iBAAKA,UAAU,uEAAf,WACE,qFAAcE,QAAd,IAAcA,OAAd,EAAcA,EAAchB,SAC5B,2EAAcgB,QAAd,IAAcA,OAAd,EAAcA,EAAcG,cAE9B,gBAAKL,UAAU,4BAAf,UACE,gBACEA,UAAU,kBACVM,IAAKnB,EACLoB,IAAK,aACLC,MAAO,WAGX,iBAAKR,UAAU,kDAAf,yFACiBE,QADjB,IACiBA,OADjB,EACiBA,EAAcO,aAC7B,kBAAMT,UAAU,OAAhB,+HACyBE,QADzB,IACyBA,OADzB,EACyBA,EAAcQ,oBAGzC,yVAC+D,KAC7D,iBAAMV,UAAU,YAAhB,gBAA6BE,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAcS,eAE7C,6XACqE,KACnE,iBAAMX,UAAU,YAAhB,gBAA6BE,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAcU,cAE7C,iBAAKZ,UAAU,gBAAf,gHACsB,KACpB,iBAAMA,UAAU,8DAAhB,gBACGE,QADH,IACGA,OADH,EACGA,EAAcW,mBAGnB,SAAC,KAAD,CAAMC,GAAE,yBAAaZ,QAAb,IAAaA,OAAb,EAAaA,EAAchB,MAAnC,UACE,gBAAKc,UAAU,4HAAf,uGAMP,EC7DKJ,EAAsB,CAC1B,CAAEV,KAAM,YAAaC,M,uDACrB,CAAED,KAAM,cAAeC,M,yDACvB,CAAED,KAAM,SAAUC,M,qDAepB,EAZ6B,WAC3B,OACE,gBAAKa,UAAU,wDAAf,SACGJ,EAAOmB,KAAI,SAACC,EAAUC,GAAX,OACV,SAAC,EAAD,CAAmB/B,KAAM8B,EAAS9B,KAAMC,MAAO6B,EAAS7B,OAAxC8B,EADN,KAKjB,C","sources":["components/Rover/RoverItem.tsx","pages/RoversPage.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useLazyGetRoverInfoQuery } from \"../../store/nasa/nasa.api\";\nimport { IRoverObj } from \"../../models/models\";\nimport { Link } from \"react-router-dom\";\nimport { addRover, selectRover } from \"../../store/nasa/nasa.slice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst RoverItem: React.FC<IRoverObj> = ({ name, image }) => {\n  const [fetchRover, { isLoading, isError, data: rover }] =\n    useLazyGetRoverInfoQuery();\n  const dispatch = useDispatch();\n  const rovers = useSelector(selectRover);\n\n  useEffect(() => {\n    fetchRover(name);\n  }, []);\n\n  if (isLoading) {\n    return <p className=\"text-2xl text-center\">Loading...</p>;\n  }\n  if (isError) {\n    return <p>Some error</p>;\n  }\n\n  rover && dispatch(addRover(rover));\n  const currentRover = rovers.find(obj => obj.name === name)\n\n  return (\n    <div className=\"flex-auto text-center border-2 rounded-md shadow-md mx-2 my-2\">\n      <div className=\"text-2xl bg-blue-500 rounded-lg shadow-md text-white py-1 px-2.5 m-1\">\n        <h1>Марсоход {currentRover?.name}</h1>\n        <div>Статус: {currentRover?.status}</div>\n      </div>\n      <div className=\"grid justify-items-center\">\n        <img\n          className=\"rounded-md my-1\"\n          src={image}\n          alt={\"roverImage\"}\n          width={\"400\"}\n        />\n      </div>\n      <div className=\"border-2 rounded-md text-lg underline mx-2 mb-3\">\n        Дата запуска: {currentRover?.launch_date}\n        <span className=\"pl-4\">\n          Дата посадки на Марс: {currentRover?.landing_date}\n        </span>\n      </div>\n      <div>\n        Самая последняя дата Земли, с которой существуют фотографии:{\" \"}\n        <span className=\"font-bold\">{currentRover?.max_date}</span>\n      </div>\n      <div>\n        Самый последний марсианский сол, с которого существуют фотографии:{\" \"}\n        <span className=\"font-bold\">{currentRover?.max_sol}</span>\n      </div>\n      <div className=\"text-2xl my-3\">\n        Всего сделано фото:{\" \"}\n        <span className=\"bg-blue-800 rounded-lg shadow-md text-white py-1 px-2.5 m-1\">\n          {currentRover?.total_photos}\n        </span>\n      </div>\n      <Link to={`/rovers/${currentRover?.name}`}>\n        <div className=\"text-lg bg-blue-500 rounded-lg shadow-md text-white py-3 px-2.5 m-1 transition duration-500 ease-in-out hover:bg-blue-800\">\n          ПОСМОТРЕТЬ ФОТО\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default RoverItem;\n","import React from \"react\";\nimport RoverItem from \"../components/Rover/RoverItem\";\nimport CuriosityImg from \"../assets/img/Curiosity.png\";\nimport OpportunityImg from \"../assets/img/Opportunity.png\";\nimport SpiritImg from \"../assets/img/Spirit.png\";\nimport {IRoverObj} from \"../models/models\";\n\nconst rovers: IRoverObj[] = [\n  { name: \"Curiosity\", image: CuriosityImg },\n  { name: \"Opportunity\", image: OpportunityImg },\n  { name: \"Spirit\", image: SpiritImg },\n];\n\nconst RoversPage: React.FC = () => {\n  return (\n    <div className=\"flex flex-wrap p-2 m-10 border-2 rounded-md shadow-md\">\n      {rovers.map((roverObj, i) => (\n        <RoverItem key={i} name={roverObj.name} image={roverObj.image} />\n      ))}\n    </div>\n  );\n};\n\n\n\nexport default RoversPage;\n"],"names":["name","image","useLazyGetRoverInfoQuery","fetchRover","isLoading","isError","rover","data","dispatch","useDispatch","rovers","useSelector","selectRover","useEffect","className","addRover","currentRover","find","obj","status","src","alt","width","launch_date","landing_date","max_date","max_sol","total_photos","to","map","roverObj","i"],"sourceRoot":""}